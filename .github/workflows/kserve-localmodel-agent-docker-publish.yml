name: Kserve localmodel agent Docker Publisher

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: kserve-localmodelnode-agent

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker buildx build . --file localmodel-agent.Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set registry info based on repo
        run: |
          if [[ "${GITHUB_REPOSITORY}" == "kserve/kserve" ]]; then
            echo "REGISTRY=docker.io" >> $GITHUB_ENV
            echo "IMAGE_ID=kserve/${IMAGE_NAME}" >> $GITHUB_ENV
            echo "REGISTRY_USER=${{ secrets.DOCKER_USER }}" >> $GITHUB_ENV
            echo "REGISTRY_PASS=${{ secrets.DOCKER_PASSWORD }}" >> $GITHUB_ENV
          else
            echo "REGISTRY=quay.io" >> $GITHUB_ENV
            echo "IMAGE_ID=quay.io/${{ vars.QUAY_OWNER }}/${IMAGE_NAME}" >> $GITHUB_ENV
            echo "REGISTRY_USER=${{ secrets.QUAY_USER }}" >> $GITHUB_ENV
            echo "REGISTRY_PASS=${{ secrets.QUAY_PASSWORD }}" >> $GITHUB_ENV
          fi

      - name: export version variable
        run: |
          IMAGE_ID=kserve/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo VERSION=$VERSION >> $GITHUB_ENV
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASS }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          context: .
          file: localmodel-agent.Dockerfile
          push: true
          tags: ${{ env.IMAGE_ID }}:${{ env.VERSION }}
          # https://github.com/docker/buildx/issues/1533
          provenance: false
